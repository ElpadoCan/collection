name: retest all bioimageio resources

on:
  workflow_dispatch:
    inputs:
      sandbox:
        description: use sandbox
        required: false
        default: true
        type: boolean

concurrency: retest-${{inputs.sandbox}}

jobs:
  setup:
    runs-on: ubuntu-latest
    environment: ${{inputs.sandbox && 'sandbox' || 'production'}}
    outputs:
      matrix: ${{steps.get_matrix.outputs.matrix}}

    env:
      S3_HOST: ${{vars.S3_HOST}}
      S3_BUCKET: ${{vars.S3_BUCKET}}
      S3_FOLDER: ${{vars.S3_FOLDER}}
      S3_ACCESS_KEY_ID: ${{secrets.S3_ACCESS_KEY_ID}}
      S3_SECRET_ACCESS_KEY: ${{secrets.S3_SECRET_ACCESS_KEY}}
      ZENODO_URL: ${{vars.ZENODO_URL}}
      ZENODO_API_ACCESS_TOKEN: ${{secrets.ZENODO_API_ACCESS_TOKEN}}
      MAIL_PASSWORD: ${{secrets.MAIL_PASSWORD}}
      RUN_URL: ${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}
      BIOIMAGEIO_USER_ID: github|${{github.actor_id}}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip" # caching pip dependencies
      - run: pip install .
      - run: backoffice download collection.json
      - run: backoffice download collection_draft.json
      - shell: python
        id: get_matrix
        run: |
          import json, os

          with open("collection.json") as f:
            collection = json.load(f)

          with open("collection_draft.json") as f:
            collection_draft = json.load(f)

          versions = [{"id": entry.get("nickname", entry["id"]), "v": "latest"} for entry in collection["collection"]]
          versions.extend([{"id": entry["id"], "v": "draft"} for entry in collection_draft["collection"])
          matrix = {"include": versions}
          with open(os.environ["GITHUB_OUTPUT"], "a") as f:
            print(f"matrix={matrix}", file=f)

  test:
    needs: setup
    strategy:
      matrix: ${{fromJson(needs.setup.outputs.matrix)}}
    uses: bioimage-io/collection/.github/workflows/test_call.yaml@main
    with:
      concept_id: ${{matrix.id}}
      version: ${{matrix.v}}
      conclude: ${{matrix.v == 'draft' && 'yes' || 'no'}}
      environment_name: ${{inputs.sandbox && 'sandbox' || 'production'}}
    secrets: inherit
